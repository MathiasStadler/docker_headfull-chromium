# syntax=docker/dockerfile:1
FROM ubuntu:23.10

# build
# docker buildx build --progress=plain . -t my_ubuntu_chrome_rust_3 -f ./src/dockerfile_chrome_rust

SHELL ["/bin/bash", "-c"]
RUN help | head -1

# Install form google-chrome => one layer


RUN \
    set -euxo pipefail; \
    apt-get update \
    && apt-get install --yes --no-install-recommends --no-install-suggests   \
    build-essential \
    ca-certificates  \
    curl \
    gnupg \
    init-system-helpers \
    libasound2 \
    libcanberra-gtk-module  \
    libgl1-mesa-dri \
    libx11-xcb1 \
    sudo  \
    unzip \
    wget 


# double
# ADD google_chrome key 
#RUN \
#    set -euxo pipefail \
#    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
#    && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list 


# Set up the google-chrome repo and install
RUN \
    set -euxo pipefail; \
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \
    && apt-get update \
    && apt-get --yes install google-chrome-stable \
    && apt-get --yes autoremove \
    && apt-get --yes clean \
    && rm -rf /var/lib/apt/lists/* 

# install chromedriver
ENV CHROME_VERSION = $(google-chrome  --product-version | awk '{print $1}' |awk -F. '{print $1}')
ENV CHROMEDRIVER_DIR=/chromedriver \
    DOWNLOAD_DIR=/DOWNLOAD

RUN set -euxo pipefail; \ 
    mkdir ${CHROMEDRIVER_DIR} \
    && mkdir ${DOWNLOAD_DIR} \ 
    && curl --output ${DOWNLOAD_DIR}/chromedriver-linux64.zip  "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/119.0.6045.159/linux64/chromedriver-linux64.zip" \
    && unzip ${DOWNLOAD_DIR}/chromedriver-linux64.zip -d ${CHROMEDRIVER_DIR}


# install rust


#create user
ARG USER_NAME=default_user \
    USER_UID=1999 \
    USER_GID=1999

RUN set -euxo pipefail; 
RUN    groupadd --gid $USER_GID $USER_NAME 
RUN    useradd --uid $USER_UID --gid $USER_GID --password $USER_NAME -m $USER_NAME 
RUN    echo "$USER_NAME:$USER_NAME" | chpasswd 
RUN    adduser $USER_NAME sudo 
# start services
# RUN update-rc.d dbus enable

# USER default_user
USER $USER_NAME

# add rust demo project
ENV RUST_PROJECT_DIR=/home/default_user/rust_work_space/tokio_finviz_shortput
# init cargo project
# change to home_directory
RUN set -euxo pipefail; \
    mkdir /home/$USER_NAME/rust_work_space \
    &&  cd $_ \
    &&  mkdir $RUST_PROJECT_DIR  \
    &&  cargo init $RUST_PROJECT_DIR  \
    &&  cd $RUST_PROJECT_DIR  \
    &&  cargo add tokio  \
    &&  cargo add tokio thirtyfour color-eyre sxd-document sxd-xpath table-extract  \
    &&  cargo build \
    &&  cargo run \
    &&  cd $RUST_PROJECT_DIR \
    &&  mkdir ./examples

# copy
COPY ./src/tokio_finviz.rs $RUST_PROJECT_DIR/examples/tokio_finviz.rs 

# add new entry to file e.g. Cargo.toml
# RUN tee -a /home/default_user/rust_work_space/tokio_finviz_shortput/Cargo.toml > /dev/null <<-"EOT" bash
# set -e, -u, -x ;
#
# [[example]]
# name = "tokio_finviz"
# EOT 

# FROM HERE
# https://www.docker.com/blog/introduction-to-heredocs-in-dockerfiles/
COPY <<EOF $RUST_PROJECT_DIR/Cargo.toml
#
[[example]]
name = "tokio_finviz"
EOF

RUN RUN set -e, -u, -x, -o pipefail; \
    && cd $RUST_PROJECT_DIR \
    && cargo build --example tokio_finviz

ENTRYPOINT ["/bin/bash"]
# ENTRYPOINT ["google-chrome","--no-sandbox","--disable-features=dbus"]
# --enable-unsafe-webgpu --enable-features=Vulkan --use-vulkan=swiftshader --use-webgpu-adapter=swiftshader --no-sandbox
# ENTRYPOINT ["set MESA_LOADER_DRIVER_OVERRIDE=\"i915\"","&&","google-chrome","--enable-unsafe-webgpu", "--enable-features=Vulkan","--use-vulkan=swiftshader","--use-webgpu","-adapter=swiftshader","--no-sandbox","--disable-features=dbus"]
# ENV MESA_LOADER_DRIVER_OVERRIDE=i915
# ENTRYPOINT ["google-chrome","--enable-unsafe-webgpu", "--enable-features=Vulkan","--use-vulkan=swiftshader","--use-webgpu","-adapter=swiftshader","--no-sandbox","--disable-features=dbus"]
