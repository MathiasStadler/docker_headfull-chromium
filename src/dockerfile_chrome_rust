# FROM HERE
# https://github.com/piercefreeman/docker/blob/main/headfull-chromium/Dockerfile

FROM ubuntu:23.10

# old 
# install wget , ssl certificate for https  and cc linker
# RUN apt update && apt install --no-install-recommends -y wget ca-certificates build-essential

# Install => one layer
# Set the Chrome repo.
RUN apt-get update \
    && apt-get install --no-install-recommends --yes  ca-certificates \
    gnupg \
    sudo \
    wget \
    build-essential 

# install chrome
# RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
#    && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \
#    && apt-get install --no-install-recommends --yes google-chrome-stable \
#    && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN curl -s https://dl-ssl.google.com/linux/linux_signing_key.pub | | sudo gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/linux_signing_key.pub --import \
    && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list \
    && apt-get install --no-install-recommends --yes google-chrome-stable \
    && apt-get clean && rm -rf /var/lib/apt/lists/*


# install rust
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH \
    RUST_VERSION=1.73.0

RUN set -eux; \
    dpkgArch="$(dpkg --print-architecture)"; \
    case "${dpkgArch##*-}" in \
    amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='0b2f6c8f85a3d02fde2efc0ced4657869d73fccfce59defb4e8d29233116e6db' ;; \
    armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='f21c44b01678c645d8fbba1e55e4180a01ac5af2d38bcbd14aa665e0d96ed69a' ;; \
    arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='673e336c81c65e6b16dcdede33f4cc9ed0f08bde1dbe7a935f113605292dc800' ;; \
    i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='e7b0f47557c1afcd86939b118cbcf7fb95a5d1d917bdd355157b63ca00fc4333' ;; \
    *) echo >&2 "unsupported architecture: ${dpkgArch}"; exit 1 ;; \
    esac; \
    url="https://static.rust-lang.org/rustup/archive/1.26.0/${rustArch}/rustup-init"; \
    wget "$url"; \
    echo "${rustupSha256} *rustup-init" | sha256sum -c -; \
    chmod +x rustup-init; \
    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION --default-host ${rustArch}; \
    rm rustup-init; \
    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \
    rustup --version; \
    cargo --version; \
    rustc --version; \
    rustup self update; \
    rustup update;

RUN useradd -m -d /home/default_user default_user

USER default_user

# init cargo project
# change to home_directory
RUN cd && \ 
    mkdir rust_work_space && \
    cd $_
ENV RUST_PROJECT_DIR=/home/default_user/rust_work_space/tokio_finviz_shortput 
RUN mkdir $RUST_PROJECT_DIR && \
    cargo init $RUST_PROJECT_DIR && \
    cd $RUST_PROJECT_DIR && \
    cargo add tokio && \
    cargo add tokio thirtyfour color-eyre sxd-document sxd-xpath table-extract && \
    cargo build && \
    cargo run



RUN cd $RUST_PROJECT_DIR && \
    mkdir ./examples

# copy
COPY ./src/tokio_finviz.rs $RUST_PROJECT_DIR/examples/tokio_finviz.rs 

# add new entry to file e.g. Cargo.toml
RUN tee -a /home/default_user/rust_work_space/tokio_finviz_shortput/Cargo.toml > /dev/null <<EOT
#
[[example]]
name = "tokio_finviz"
EOT


# compile

#RUN cd $RUST_PROJECT_DIR && \
#cargo build --example tokio_finviz

# install google_chrome , chromedriver and xvfb

# FROM ubuntu:23.10





#create user
ARG USERNAME=default_user
ARG USER_UID=1999
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID --password $USERNAME -m $USERNAME \
    && echo "$USERNAME:$USERNAME" | chpasswd \
    && adduser $USERNAME sudo \
    # start services
    && update-rc.d dbus enable

# USER default_user
USER $USERNAME

ENTRYPOINT ["google-chrome","--no-sandbox","--disable-features=dbus"]

